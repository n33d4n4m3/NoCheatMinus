#   This program is free software: you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation, either version 3 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#
# ...
# Description:  This check monitors various impossible client states that may indicate the use of exploits.
# Fail:         This check fails if the player reaches a state that should be legitimately impossible to achieve.
# Sub checks:    - Frankenstein
#                - XCarry
#                - TridentDupe
# Author:       n33d4n4m3
# ...

# ----------------------
# Subcheck: Frankenstein
# ----------------------

execute as @a[tag=VE.PlayerAttackEvent] if score @s ncmDeathTime > @s ncmLastLatencyLevel run scoreboard players set @s ncmFailedCOMEX 9
execute as @a[tag=VE.PlayerAttackEvent] if score @s ncmDeathTime > @s ncmLastLatencyLevel if score @s ncmVerbose matches 2 run tellraw @a[scores={ncmInputR=1}] ["",{"text":"NCM","color":"dark_gray"},{"text":": ","color":"gray"},{"selector":"@s","color":"gray"},{"text":">> ","color":"gray"},{"text":"Combined","color":"light_purple"},{"text":".","color":"light_purple"},{"text":"Exploit.Frankenstein","color":"light_purple"}]
execute as @a[tag=VE.PlayerAttackEvent] if score @s ncmDeathTime > @s ncmLastLatencyLevel run tellraw @a[scores={ncmInputR=2}] ["",{"text":"NCM","color":"dark_gray"},{"text":": ","color":"gray"},{"selector":"@s","color":"gray"},{"text":">> ","color":"gray"},{"text":"Combined","color":"light_purple"},{"text":".","color":"light_purple"},{"text":"Exploit.Frankenstein","color":"light_purple"}]
execute as @a[tag=VE.PlayerAttackEvent] if score @s ncmDeathTime > @s ncmLastLatencyLevel if score DataHolder ncmBlockMode matches 1 if score DataHolder ncmPenaltyKickPossible matches 1 run function ncm:penalty/kick

# ----------------
# Subcheck: XCarry
# ----------------

execute as @a[tag=VE.PlayerMoveEvent] if score @s VEGbl.thePlayer.currentMovementState matches 2..3 if predicate ncm:has_items_in_craftingslots run scoreboard players set @s ncmFailedCOMEX 9
execute as @a[tag=VE.PlayerMoveEvent] if score @s VEGbl.thePlayer.currentMovementState matches 2..3 if predicate ncm:has_items_in_craftingslots if score @s ncmVerbose matches 2 run tellraw @a[scores={ncmInputR=1}] ["",{"text":"NCM","color":"dark_gray"},{"text":": ","color":"gray"},{"selector":"@s","color":"gray"},{"text":">> ","color":"gray"},{"text":"Combined","color":"light_purple"},{"text":".","color":"light_purple"},{"text":"Exploit.XCarry","color":"light_purple"}]
execute as @a[tag=VE.PlayerMoveEvent] if score @s VEGbl.thePlayer.currentMovementState matches 2..3 if predicate ncm:has_items_in_craftingslots run tellraw @a[scores={ncmInputR=2}] ["",{"text":"NCM","color":"dark_gray"},{"text":": ","color":"gray"},{"selector":"@s","color":"gray"},{"text":">> ","color":"gray"},{"text":"Combined","color":"light_purple"},{"text":".","color":"light_purple"},{"text":"Exploit.XCarry","color":"light_purple"}]
execute as @a[tag=VE.PlayerMoveEvent] if score @s VEGbl.thePlayer.currentMovementState matches 2..3 if predicate ncm:has_items_in_craftingslots if score DataHolder ncmBlockMode matches 1 run scoreboard players set @s VE.PlayerMoveEvent.willModify 1

execute as @a[tag=VE.PlayerMoveEvent] if score @s VE.PlayerMoveEvent.hasRotationChanged matches 1 if predicate ncm:has_items_in_craftingslots run scoreboard players set @s ncmFailedCOMEX 9
execute as @a[tag=VE.PlayerMoveEvent] if score @s VE.PlayerMoveEvent.hasRotationChanged matches 1 if predicate ncm:has_items_in_craftingslots if score @s ncmVerbose matches 2 run tellraw @a[scores={ncmInputR=1}] ["",{"text":"NCM","color":"dark_gray"},{"text":": ","color":"gray"},{"selector":"@s","color":"gray"},{"text":">> ","color":"gray"},{"text":"Combined","color":"light_purple"},{"text":".","color":"light_purple"},{"text":"Exploit.XCarry","color":"light_purple"}]
execute as @a[tag=VE.PlayerMoveEvent] if score @s VE.PlayerMoveEvent.hasRotationChanged matches 1 if predicate ncm:has_items_in_craftingslots run tellraw @a[scores={ncmInputR=2}] ["",{"text":"NCM","color":"dark_gray"},{"text":": ","color":"gray"},{"selector":"@s","color":"gray"},{"text":">> ","color":"gray"},{"text":"Combined","color":"light_purple"},{"text":".","color":"light_purple"},{"text":"Exploit.XCarry","color":"light_purple"}]
execute as @a[tag=VE.PlayerMoveEvent] if score @s VE.PlayerMoveEvent.hasRotationChanged matches 1 if predicate ncm:has_items_in_craftingslots if score DataHolder ncmBlockMode matches 1 run scoreboard players set @s VE.PlayerMoveEvent.willModify 1

# ---------------------
# Subcheck: TridentDupe
# ---------------------

execute as @a if predicate ncm:has_trident_in_craftingslots as @e[type=trident,nbt={HasBeenShot:false}] on origin if entity @s run scoreboard players set @s ncmFailedCOMEX 9
execute as @a if predicate ncm:has_trident_in_craftingslots as @e[type=trident,nbt={HasBeenShot:false}] on origin if entity @s if score @s ncmVerbose matches 2 run tellraw @a[scores={ncmInputR=1}] ["",{"text":"NCM","color":"dark_gray"},{"text":": ","color":"gray"},{"selector":"@s","color":"gray"},{"text":">> ","color":"gray"},{"text":"Combined","color":"light_purple"},{"text":".","color":"light_purple"},{"text":"Exploit.TridentDupe","color":"light_purple"}]
execute as @a if predicate ncm:has_trident_in_craftingslots as @e[type=trident,nbt={HasBeenShot:false}] on origin if entity @s run tellraw @a[scores={ncmInputR=2}] ["",{"text":"NCM","color":"dark_gray"},{"text":": ","color":"gray"},{"selector":"@s","color":"gray"},{"text":">> ","color":"gray"},{"text":"Combined","color":"light_purple"},{"text":".","color":"light_purple"},{"text":"Exploit.TridentDupe","color":"light_purple"}]
execute as @a if predicate ncm:has_trident_in_craftingslots as @e[type=trident,nbt={HasBeenShot:false}] on origin if entity @s at @s if score DataHolder ncmBlockMode matches 1 run kill @e[type=trident,distance=..7,nbt={inGround:0b}]